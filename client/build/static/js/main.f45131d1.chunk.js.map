{"version":3,"sources":["logo.svg","HomePage/tab_link.tsx","HomePage/homepage.tsx","BackstoryPage/backstorypage.tsx","RoadMapPage/roadmappage.tsx","FAQPage/faqpage.tsx","TeamPage/teampage.tsx","App.js","reportWebVitals.js","index.js"],"names":["TabLink","props","href","path","HomePage","label","BackstoryPage","id","RoadmapPage","roadMapItems","percentage","reward","forEach","roadmap","item","FAQPage","faqList","question","answer","faq","renderFAQ","TeamPage","teamMemberList","dolphinImagePath","name","bio","className","member","teamMember","App","dotenv","require","dotenvExpand","config","useState","setPlaceholder","useEffect","fetch","then","res","json","data","result","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,YCYAA,EALyB,SAAAC,GACpC,OACI,mBAAGC,KAAMD,EAAME,KAAf,oBCqBOC,EAvB2B,SAAAH,GAItC,OACI,gCAEI,gCACI,cAAC,EAAD,CAASI,MAAM,YAAYF,KAAK,MAChC,cAAC,EAAD,CAASE,MAAM,UAAUF,KAAK,MAC9B,cAAC,EAAD,CAASE,MAAM,OAAOF,KAAK,MAC3B,cAAC,EAAD,CAASE,MAAM,OAAOF,KAAK,MAC3B,cAAC,EAAD,CAASE,MAAM,OAAOF,KAAK,SAI/B,gCACI,8BAhBgB,uBAiBhB,8BAhBe,uOCUhBG,EAfqC,SAAAL,GAEhD,OACI,sBAAKM,GAAG,iBAAR,UAEI,sEAIA,sHCgDGC,EAxDiC,SAAAP,GAE5C,IA6BMQ,EAAe,CA7BH,CACdC,WAAY,GACZC,OAAQ,oaAEM,CACdD,WAAY,GACZC,OAAQ,sJAGM,CACdD,WAAY,GACZC,OAAQ,mXAEM,CACdD,WAAY,GACZC,OAAQ,uKAEM,CACdD,WAAY,GACZC,OAAQ,8HAEM,CACdD,WAAY,GACZC,OAAQ,sGAEO,CACfD,WAAY,IACZC,OAAQ,4HAmBZ,OACI,qBAAKJ,GAAG,eAAR,SACI,qBAAKA,GAAG,cAAR,SAVA,gDAEKE,EAAaG,SAAQ,SAACC,GATT,IAACC,KAUOD,GARIH,WAAoBI,EAAKH,kBCiBpDI,EApDyB,SAAAd,GACpC,IAqBMe,EAAU,CArBE,CACdC,SAAU,8BACVC,OAAQ,4RAEM,CACdD,SAAU,sBACVC,OAAQ,iCAEM,CACdD,SAAU,sBACVC,OAAQ,2FAEM,CACdD,SAAU,4CACVC,OAAQ,kDAEM,CACdD,SAAU,6BACVC,OAAQ,6HAsBZ,OACI,sBAAKX,GAAG,WAAR,UACI,8DAGA,8BAdA,gDAEKS,EAAQJ,SAAQ,SAACO,IAVZ,SAACA,GAEwBA,EAAIF,SAAkBE,EAAID,OASrDE,CAAUD,eCefE,EAhD2B,SAAApB,GACzC,IAeKqB,EAAiB,CAfT,CACTC,iBAAkB,mDAClBC,KAAM,aACNC,IAAK,iCAEI,CACVF,iBAAkB,iDAClBC,KAAM,mBACNC,IAAK,mDAEK,CACVF,iBAAkB,gDAClBC,KAAM,gBACNC,IAAK,mDA0BT,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SATC,gDAEKJ,EAAeV,SAAQ,SAACe,GAjBb,IAACC,KAiByCD,GAbrCH,KACZI,EAAWH,IACEG,EAAWL,4BCM3BM,MA5Bf,WAEE,IAAIC,EAASC,EAAQ,IACFA,EAAQ,GAG3BC,CADYF,EAAOG,UAGnB,MAAsCC,mBAAS,MAA/C,mBAAoBC,GAApB,WASA,OAPAC,qBAAU,WACRC,MAAM,UAAUC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAE3CN,EAAeM,EAAKC,aAErB,IAGD,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCpBSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f45131d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\ninterface TabLinkProps {\n    label: string;\n    path: string;\n}\n\nconst TabLink: React.FC<TabLinkProps> = props => {\n    return (\n        <a href={props.path}>label</a>\n    )\n}\nexport default TabLink;","import React from 'react';\nimport TabLink from \"./tab_link\";\n\ninterface HomePageProps {\n\n}\n\nconst HomePage: React.FC<HomePageProps> = props => {\n    const introParagraphTitle = 'Dive in the Lagoon'\n    const introParagraphText = '9010 Dolphins chilling in an enormous sunken castle. A limited NFT collection where the token doubles as a membership to the lax dolphin lagoon. Dolphins are minted as ERC-721 tokens. Each of these cost .04 ETH to mint.'\n\n    return (\n        <div>\n            {/*Tabs*/}\n            <div>\n                <TabLink label=\"Backstory\" path=\"#\"/>\n                <TabLink label=\"Roadmap\" path=\"#\"/>\n                <TabLink label=\"Logo\" path=\"#\"/>\n                <TabLink label=\"FAQs\" path=\"#\"/>\n                <TabLink label=\"Team\" path=\"#\"/>\n            </div>\n\n            {/*Intro Paragraph*/}\n            <div>\n                <div>{introParagraphTitle}</div>\n                <div>{introParagraphText}</div>\n            </div>\n        </div>\n    )\n}\nexport default HomePage;","import React from 'react';\n\ninterface BackstoryPageProps {}\n\nconst BackstoryPage: React.FC<BackstoryPageProps> = props => {\n\n    return (\n        <div id=\"backstory-page\">\n            {/*Backstory Title*/}\n            <div>\n                How did our dolphins become so lax?\n            </div>\n            {/*Backstory Paragraph*/}\n            <div>\n                Believe it or not, or dolphins have always been lax... They just found a castle\n            </div>\n        </div>\n    )\n}\nexport default BackstoryPage;","import React from 'react';\nimport RoadMapItem from \"./roadmap_item\";\n\ninterface RoadmapPageProps {}\n\nconst RoadmapPage: React.FC<RoadmapPageProps> = props => {\n\n    const roadMap10 = {\n        percentage: 10,\n        reward: 'The kingdom’s cash reserve (community wallet) gets filled with ETH. The cash reserve will be used for different things voted by Dolphin holders. We will use these funds to buy floor dolphins, acquire giveaway prizes, and support our community. A percentage of sales will be decided to make sure the project is sustained. We will be hosting competitions for the first 5 days after launch. More details to come!\\n'\n    }\n    const roadMap20 = {\n        percentage: 20,\n        reward: 'We donate 10% of our net mint to the following charities: Henry charity, Shaan charity' +\n            'Henry is passionate about X and Shaan is passionate about X.'\n    }\n    const roadMap30 = {\n        percentage: 30,\n        reward: 'For 4 weeks, we will have the community vote on a custom 1 of 1 Dolphin once a week for our artist to create. We will then give away that dolphin to a member of our community! Votes will be casted on Monday and Tuesday, art will be revealed on Sunday, and the winner will be selected on Sunday night. New hangout areas will be revealed on the website for owners only.'\n    }\n    const roadMap40 = {\n        percentage: 40,\n        reward: 'The lagoon initiative launches. We want to get to know the community. We will be hosting bi-weekly Twitter spaces to hear stories from NFT collectors and creators.'\n    }\n    const roadMap50 = {\n        percentage: 50,\n        reward: '50% of royalties from secondary sales on Opensea will return to dolphin holders. More information to come in the future!\\n'\n    }\n    const roadMap75 = {\n        percentage: 75,\n        reward: 'We give away our custom stickers, t-shirts, and more. The Lagoon gift shop opens shortly after. \\n'\n    }\n    const roadMap100 = {\n        percentage: 100,\n        reward: 'The Ocean on the Ethereum blockchain is a vast place. We reveal an NFT in the dolphin universe free for owners to mint.'\n    }\n    const roadMapItems = [roadMap10, roadMap20, roadMap30, roadMap40, roadMap50, roadMap75, roadMap100]\n\n    const renderRoadMapItem = (item: { percentage: any; reward: any; }) => {\n        return (\n            <RoadMapItem percentage={item.percentage} reward={item.reward}/>\n        )\n    }\n    // @ts-ignore\n    const renderAllRoadMapItems = () => (\n            <div>\n                // @ts-ignore\n                {roadMapItems.forEach((roadmap) => {\n                    renderRoadMapItem(roadmap);\n                })}\n            </div>\n    )\n\n    return (\n        <div id=\"roadmap-page\">\n            <div id=\"roadmap-map\">\n                {renderAllRoadMapItems()}\n            </div>\n        </div>\n    )\n}\nexport default RoadmapPage;","import React from 'react';\nimport FrequentlyAskedQuestion from './frequentlyAskedQuestion'\n\ninterface FAQPageProps {}\n\nconst FAQPage: React.FC<FAQPageProps> = props => {\n    const question1 = {\n        question: 'What is Lax Dolphin Lagoon?',\n        answer: 'Lax Dolphin Lagoon is a collection of 10,000 unique, randomly generated dolphins swimming in the ocean of the Ethereum blockchain as ERC-721 NFTs. Our goal is to create a highly supportive and active community. We are looking forward to getting to know our future dolphin holders!',\n    }\n    const question2 = {\n        question: 'How many can I buy?',\n        answer: 'Limited to 15 per transaction',\n    }\n    const question3 = {\n        question: 'What are my rights?',\n        answer: 'You own the commercial rights to your dolphin, as long as it is in your ethereum wallet',\n    }\n    const question4 = {\n        question: 'What are the odds of a duplicate dolphin?',\n        answer: 'We don’t teach statistics, but Impossible',\n    }\n    const question5 = {\n        question: 'Who is behind the project?',\n        answer: '3 good friends that have a huge passion for the NFT space, and are very excited to create and grow their own community. ',\n    }\n\n    const faqList = [question1, question2, question3, question4, question5]\n\n    const renderFAQ = (faq: { question: any; answer: any; }) => {\n        return (\n            <FrequentlyAskedQuestion question={faq.question} answer={faq.answer} />\n        )\n    }\n    const renderFAQList = () => {\n        // @ts-ignore\n        return (\n            <div>\n                // @ts-ignore\n                {faqList.forEach((faq) => {\n                    renderFAQ(faq);\n                })}\n            </div>\n        )\n    }\n\n    return (\n        <div id=\"faq-page\">\n            <div>\n                Frequently Asked Questions:\n            </div>\n            <div>\n                {renderFAQList()}\n            </div>\n        </div>\n    )\n}\nexport default FAQPage;","import React from 'react';\nimport TeamMember from \"./team_member\";\n\ninterface TeampageProps {\n\n}\n\nconst TeamPage: React.FC<TeampageProps> = props => {\n const ryan = {\n     dolphinImagePath: '../../public/assets/dolphins/patrick-dolphin.png',\n     name: 'Ryan Clapp',\n     bio: 'Ryan is a goon who loves NFTs',\n }\nconst henry = {\n    dolphinImagePath: '../../public/assets/dolphins/chain-dolphin.png',\n    name: 'Henry Stachowiak',\n    bio: 'Henry is a goon who loves front end development',\n}\nconst shaan = {\n    dolphinImagePath: '../../public/assets/dolphins/suit-dolphin.png',\n    name: 'Shaan Hossain',\n    bio: 'Shaan is a goon who loves back end development',\n}\nconst teamMemberList = [ryan, henry, shaan]\n\nconst renderTeamMember = (teamMember: { dolphinImagePath: any; name: any; bio: any; }) => {\n return (\n     <div className=\"col\">\n         <TeamMember\n             name={teamMember.name}\n             bio={teamMember.bio}\n             dolphinImagePath={teamMember.dolphinImagePath}\n         />\n     </div>\n )\n};\n\nconst renderAllTeamMembers = () => {\n\n     return (\n         <div>\n             // @ts-ignore\n             {teamMemberList.forEach((member) => {renderTeamMember(member)})}\n         </div>\n     )\n}\n\nreturn (\n    <div className=\"container\">\n        <div className=\"row\">\n            {renderAllTeamMembers()}\n        </div>\n    </div>\n)\n}\nexport default TeamPage;","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from \"./HomePage/homepage\";\nimport BackstoryPage from \"./BackstoryPage/backstorypage\";\nimport RoadmapPage from \"./RoadMapPage/roadmappage\";\nimport FAQPage from \"./FAQPage/faqpage\";\nimport TeamPage from \"./TeamPage/teampage\";\n\nfunction App() {\n\n  var dotenv = require('dotenv')\n  var dotenvExpand = require('dotenv-expand')\n\n  var myEnv = dotenv.config()\n  dotenvExpand(myEnv)\n\n  const [placeholder, setPlaceholder] = useState('Hi');\n\n  useEffect(() => {\n    fetch('/hello').then(res => res.json()).then(data => {\n      // setPlaceholder(process.env.REACT_APP_API_URL);\n      setPlaceholder(data.result);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <HomePage />\n      <BackstoryPage />\n      <RoadmapPage />\n      <FAQPage />\n      <TeamPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}